#textdomain wesnoth-For_Power

#define ABILITIES_EVENTS
# shockwave weapon special
[event]
  name=attacker_hits
  first_time_only=no
  [filter_attack]
    special=shockwave
  [/filter_attack]
  [store_unit]
    [filter]
      x,y=$x1,$y1
    [/filter]
    variable=harmer
	  kill=no
  [/store_unit]
  [store_unit]
    [filter]
      x,y=$x2,$y2
    [/filter]
    variable=primary_target
	  kill=no
  [/store_unit]		#Stores the information about units to know their positions. Other targets are stored a bit lower, we need to damage them first.	
  [harm_unit]
    [filter]
      [filter_adjacent]
        x,y=$x2,$y2
      [/filter_adjacent]
      [not]
        side=$harmer.side
      [/not]
      [not]
        x,y=$x2,$y2
      [/not]
    [/filter]
	  [filter_second]
	    x,y=$x1,$y1
	  [/filter_second]
    amount=8
	  damage_type=impact
	  fire_event=yes
	  experience=no
	  animate=no
  [/harm_unit]
  [store_unit]
    [filter]
      [filter_adjacent]
        x,y=$x2,$y2
      [/filter_adjacent]
      [not]
        side=$harmer.side
      [/not]
      [not]
        x,y=$x2,$y2
      [/not]
    [/filter] 
    variable=other_targets
	  kill=yes		#We don't want to duplicate them.
  [/store_unit]	
  {FOREACH other_targets i}
  {VARIABLE move_x $other_targets[$i].x}
  {VARIABLE move_y $other_targets[$i].y}
	{VARIABLE_OP move_x sub $primary_target.x}
	{VARIABLE_OP move_y sub $primary_target.y}
	{VARIABLE_OP other_targets[$i].x add $move_x}
	{VARIABLE_OP other_targets[$i].y add $move_y}		#Get the directions from the primary targets to others, and move them into them.
  [unstore_unit]
    variable=other_targets[$i]
    find_vacant=yes
		check_passability=yes			#We don't want them to be knocked into walls, do we?
  [/unstore_unit]
  {NEXT i}
	{CLEAR_VARIABLE harmer}
	{CLEAR_VARIABLE primary_target}
	{CLEAR_VARIABLE other_targets}
	{CLEAR_VARIABLE move_x}
	{CLEAR_VARIABLE move_y}
[/event]
# explosive weapon special
	[event]
    name=attacker_hits
    first_time_only=no
    [filter_attack]
      special=explosive
    [/filter_attack]
	  {VARIABLE damage $damage_inflicted}
	  {VARIABLE_OP damage multiply 100}
	  [set_variable]
		  name=resistance
		  to_variable=second_unit.resistance.$weapon.type
	  [/set_variable]
	  [if]
      [variable]
        name=resistance
        greater_than=0
      [/variable]
      [else]
		    {VARIABLE resistance 100}
	    [/else]
	  [/if]
	  {VARIABLE_OP damage divide $resistance}
	  {CLEAR_VARIABLE resistance}
		[harm_unit]
		  [filter]
			  [filter_adjacent]
				  x,y=$x2,$y2
			  [/filter_adjacent]
			  [not]
				  x,y=$x2,$y2
			  [/not]
			  [filter_side]
          [enemy_of]
            side=$unit.side
          [/enemy_of]
        [/filter_side]
			[/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
		  amount=$($($damage*3)/4-4)
			damage_type=$weapon.type
			fire_event=yes
			experience=no
		[/harm_unit]
	  {CLEAR_VARIABLE damage}
  [/event]
# Lemyr's lightbringer
[event]
  name=attacker hits
  first_time_only=no
  [filter]
    ability=lightbringer
  [/filter]
  [filter_second]
    level=2
    [or]
      level=3
    [/or]
    [and]
      [filter_wml]
        alignment=chaotic
      [/filter_wml]
    [/and]
  [/filter_second]
  {VARIABLE $second_unit.alignment lawful}
  [unstore_unit]
    variable=second_unit
    find_vacant=no
  [/unstore_unit]
  [event]
    name=side turn
    [filter_condition]
      [variable]
        name=side_number
        equals=$second_unit.side
      [/variable]
    [/filter_condition]
    [store_unit]
      [filter]
        id=$second_unit.id
      [/filter]
      variable=alignment_store
    [/store_unit]
    {VARIABLE $second_unit.alignment chaotic}
    [unstore_unit]
      variable=alignment_store
      find_vacant=no
    [/unstore_unit]
  [/event]
[/event]
# older Jolla's scourge
[event]
  name=attacker hits
  first_time_only=no
  id=attacker_poisons
  [filter_attack]
    special=scourge
  [/filter_attack]
  [filter_second]
    [not]
      [filter_wml]
        [variables]
          scourge=yes
        [/variables]
      [/filter_wml]
    [/not]
  [/filter_second]
  {VARIABLE second_unit.variables.scourge yes}
  {VARIABLE second_unit.status.unhealable yes}
  [unstore_unit]
    variable=second_unit
    find_vacant=no
  [/unstore_unit]
  [object]
    [filter]
      id=$second_unit.id
    [/filter]
    silent=yes
    [effect]
      apply_to=image_mod
      replace="CS(-100,-25,-22)"
    [/effect]
  [/object]
[/event]
[event]
  name=defender hits
  first_time_only=no
  id=defender_poisons
  [filter_second_attack]
    special=scourge
  [/filter_second_attack]
  {VARIABLE unit.variables.scourge yes}
  {VARIABLE unit.status.unhealable yes}
  [unstore_unit]
    variable=unit
    find_vacant=no
  [/unstore_unit]
  [object]
    [filter]
      id=$unit.id
    [/filter]
    silent=yes
    [effect]
      apply_to=image_mod
      replace="CS(-100,-25,-22)"
    [/effect]
  [/object]
[/event]
[event]
  name=turn refresh
  id=main_harmer
  first_time_only=no
  [store_unit]
    [filter]
      side=$side_number
      [filter_wml]
        [variables]
          scourge=yes
        [/variables]
      [/filter_wml]
      [not]
        [filter_adjacent]
          is_enemy=no
          ability=curing
        [/filter_adjacent]
        [or]
          [filter_adjacent]
            is_enemy=no
            ability=healing
          [/filter_adjacent]
        [/or]
      [/not]
    [/filter]
    variable=poisoned_temp
  [/store_unit]
  {FOREACH poisoned_temp i}
    [harm_unit]
      [filter]
        id=$poisoned_temp[$i].id
      [/filter]
      amount=4
      kill=yes
    [/harm_unit]
  {NEXT i}
  {CLEAR_VARIABLE poisoned_temp}
[/event]
[event]
  name=turn refresh
  first_time_only=no
  id=remove_poison
  [store_unit]
    [filter]
      side=$side_number
      [filter_wml]
        [variables]
          scourge=yes
        [/variables]
      [/filter_wml]
      [and]
        [filter_adjacent]
          is_enemy=no
          ability=curing
        [/filter_adjacent]
      [/and]
    [/filter]
    variable=poisoned_temp
  [/store_unit]
  {FOREACH poisoned_temp i}
    {VARIABLE poisoned_temp[$i].variables.scourge no}
    {VARIABLE poisoned_temp[$i].status.unhealable no}
    [unstore_unit]
      variable=poisoned_temp[$i]
      find_vacant=no
    [/unstore_unit]
    [object]
      [filter]
        id=$poisoned_temp[$i].id
      [/filter]
      silent=yes
      [effect]
        apply_to=image_mod
        replace="CS(0,0,0)"
      [/effect]
    [/object]
  {NEXT i}
  {CLEAR_VARIABLE poisoned_temp}
[/event]
[event]
  name=post advance
  first_time_only=no
  id=unpoison_on_levelup
  [filter]
    [filter_wml]
      [variables]
        scourge=yes
      [/variables]
    [/filter_wml]
  [/filter]
  {VARIABLE unit.variables.scourge no}
  {VARIABLE unit.status.unhealable no}
  [unstore_unit]
    variable=unit
    find_vacant=no
  [/unstore_unit]
[/event]
# Merissa's frost
[event]
  name=attacker hits
  first_time_only=no
  [filter_attack]
    special=frost
  [/filter_attack]
  [filter_second]
    [not]
      [filter_wml]
        [variables]
          frozen=yes
        [/variables]
      [/filter_wml]
    [/not]
  [/filter_second]
  {VARIABLE second_unit.variables.frozen yes}
  {VARIABLE second_unit.status.unhealable yes}
  [unstore_unit]
    variable=second_unit
    find_vacant=no
  [/unstore_unit]
[/event]
[event]
  name=turn refresh
  first_time_only=no
  [store_unit]
    [filter]
      [filter_wml]
        [variables]
          frozen=yes
        [/variables]
      [/filter_wml]
    [/filter]
    variable=freezing_temp
  [/store_unit]
  {FOREACH freezing_temp i}
    [if]
      [variable]
        name=freezing_temp[$i].side
        equals=$side_number
      [/variable]
      [then]
        {VARIABLE damage 3}
      [/then]
      [else]
        {VARIABLE damage 0}
      [/else]
    [/if]
    [harm_unit]
      [filter]
        id=$freezing_temp[$i].id
      [/filter]
      amount=$damage
      damage_type=cold
      slowed=yes
      kill=yes
    [/harm_unit]
  {NEXT i}
  {CLEAR_VARIABLE freezing_temp,damage}
[/event]
[event]
  name=post advance
  first_time_only=no
  [filter]
    [filter_wml]
      [variables]
        frozen=yes
      [/variables]
    [/filter_wml]
  [/filter]
  {VARIABLE unit.variables.frozen no}
  {VARIABLE unit.status.unhealable no}
  [unstore_unit]
    variable=unit
    find_vacant=no
  [/unstore_unit]
[/event]
# knockback weapon special
[event]
  name=attack end
  first_time_only=no
  [filter_attack]
    special=knockback
  [/filter_attack]
	[if]
		[variable]
		  name=second_unit.hitpoints
		  less_than_equal_to=1
		[/variable]
		[else]
			[store_unit]
			  [filter]
				  x,y=$x2,$y2
			  [/filter]
			  variable=knockbacked
			  kill=yes
			[/store_unit]
			{VARIABLE knock_x $x2}
			{VARIABLE knock_y $y2}
			{VARIABLE_OP knock_x sub $x1}
			{VARIABLE_OP knock_y sub $y1}
			{VARIABLE_OP knockbacked.x add $knock_x}
			{VARIABLE_OP knockbacked.y add $knock_y}
			[unstore_unit]
			  variable=knockbacked
			  find_vacant=yes
			  check_passability=yes
			[/unstore_unit]
			[if]
			  [have_unit]
				  id=$knockbacked.id
			  [/have_unit]
			  [else]
		      [unstore_unit]
	        	variable=knockbacked
        		find_vacant=yes
			      x,y=$x2,$y2
		      [/unstore_unit]
			  [/else]
			[/if]
			[if]
			  [variable]
				  name=knockbacked.hitpoints
				  less_than_equal_to=1
			  [/variable]
			  [then]
				  [kill]
				    id=$knockbacked.id
				    animate=no
				    experience=yes
				    fire_event=yes
				    [filter_second]
				      x,y=$x1,$y1
				    [/filter_second]
				  [/kill]
			  [/then]
			[/if]
      {CLEAR_VARIABLE knock_x,knock_y,knockbacked}
		[/else]
	[/if]
[/event]
# extra 5 fire damage weapon special
[event]
  name=attacker hits
  first_time_only=no
  [filter_attack]
    special=extra damage 5 fire
  [/filter_attack]
  [harm_unit]
    [filter]
      x,y=$x2,$y2
    [/filter]
    [filter_second]
      x,y=$x1,$y1
    [/filter_second]
    amount=5
    damage_type=fire
    fire_event=yes
    experience=yes
    kill=yes
    animate=no
  [/harm_unit]
[/event]
[event]
  name=defender hits
  first_time_only=no
  [filter_second_attack]
    special=extra damage 5 fire
  [/filter_second_attack]
  [harm_unit]
    [filter]
      x,y=$x1,$y1
    [/filter]
    [filter_second]
      x,y=$x2,$y2
    [/filter_second]
    amount=5
    damage_type=fire
    fire_event=yes
    experience=yes
    kill=yes
    animate=no
  [/harm_unit]
[/event]
#enddef
